/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

// We are going to create a fluid grid with 1, 3, or 5 columns and 20px gutters
// between columns (applied as 10px of left/right padding on each column).
$zen-columns: 1;
$zen-gutters: 10px;

// If you need IE6/7 support for box-sizing: border-box (default), see _init.scss
//$zen-box-sizing: content-box;

// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;

/**
 * Center the page.
 *
 * For screen sizes larger than 1200px, prevent excessively long lines of text
 * by setting a max-width.
 */
#page,  
.region-bottom {
  margin: 10px auto;
  max-width: 1200px;
}

/* Apply the shared properties of grid items in a single, efficient ruleset. */
#header,
#content,
.region-sidebar-first,
.region-sidebar-second,
#footer li.menu__item {
  // See the note about $zen-auto-include-item-base above.
  @include zen-grid-item-base();
}

/* Containers for grid items and flow items. */
#header,
#main,
#footer {
  @include zen-grid-container();
}

/**
 * Use a special 2 column grid for the blocks in the second sidebar.
 */
@media all and (min-width: 480px) and (max-width: 959px) {

  .region-sidebar-second {
    $zen-columns: 2 !global;

    /* Apply the shared properties of grid items in a single, efficient ruleset. */
    .block {
      @include zen-grid-item-base();
    }
    /* Span 1 column, starting in the 1st column from left. */
    .block:nth-child(2n+1) {
      @include zen-grid-item(1, 1);
      @include zen-new-row();
    }
    /* Span 1 column, starting in the 2nd column from left. */
    .block:nth-child(2n) {
      @include zen-grid-item(1, 2);
    }
  }

  /* Footer menu layout: 3 menu items per row on tablets */
  #footer {
    $zen-columns: 3 !global;

    li.menu__item:nth-child(3n+1) {
      @include zen-grid-item(1, 1);
      @include zen-new-row();
    }

    li.menu__item:nth-child(3n+2) {
      @include zen-grid-item(1, 2);
    }

    li.menu__item:nth-child(3n) {
      @include zen-grid-item(1, 3);
    }
  }

}

/**
 * Use 5 grid columns for larger screens.
 */
@media all and (min-width: 960px) {

  $zen-columns: 5 !global;

  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first {
    /* Span 4 columns, starting in 2nd column from left. */
    #content {
      @include zen-grid-item(4, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    /* Span 4 columns, starting in 1st column from left. */
    #content {
      @include zen-grid-item(4, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 5);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    /* Span 3 columns, starting in 2nd column from left. */
    #content {
      @include zen-grid-item(3, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 5);
    }
  }

  #footer {
    $zen-columns: 6 !global;

    li.menu__item:nth-child(1) {
      @include zen-grid-item(1, 1);
      @include zen-new-row();
    }

    li.menu__item:nth-child(2) {
      @include zen-grid-item(1, 2);
    }

    li.menu__item:nth-child(3) {
      @include zen-grid-item(1, 3);
    }

    li.menu__item:nth-child(4) {
      @include zen-grid-item(1, 4);
    }

    li.menu__item:nth-child(5) {
      @include zen-grid-item(1, 5);
    }

    li.menu__item:nth-child(6) {
      @include zen-grid-item(1, 6);
    }
  }

}
